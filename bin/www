#!/usr/bin/env node

/**
 * Dependancies
 */
const app = require('../app');
const debug = require('debug')('node-js-learner:server');
const http = require('http');

/**
 *  Setup port
 */
const port = 8080;
app.set('port', port);

/**
 * Start the http server
 */

const server = http.createServer(app);


/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(port);
server.on('error', onError);
server.on('listening', listening);

/**
 * Listener for server listening event.
 */

function listening() {
	const address = server.address();
	const bind = typeof address === 'string'
		? `pipe ${address}`
		: `port ${address.port}`;
	debug(`Listening on ${bind}`);
}

/**
 * Listener for HTTP error event.
 *
 * Please note the below function was taken from the myExpressApp example.
 */
function onError(error) {
	if (error.syscall !== 'listen') {
	  	throw error;
	}

	const bind = typeof port === 'string'
		? `pipe ${port}`
		: `port ${port}`;

	// handle specific listen errors with friendly messages
	switch (error.code) {
	  	case 'EACCES':
			console.error(`${bind} requires elevated privileges`);
			process.exit(1);
			break;
	  	case 'EADDRINUSE':
			console.error(`${bind} is already in use`);
			process.exit(1);
			break;
	  	default:
			throw error;
	}
}
